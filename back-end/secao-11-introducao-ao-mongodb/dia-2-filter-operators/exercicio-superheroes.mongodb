
// para importar o json file
//
// docker cp superheroes.json mongo-container:/tmp/superheroes.json
// docker exec mongo-container mongoimport -d class -c superheroes --file /tmp/superheroes.json --jsonArray

use('class')
db.superheroes.countDocuments();

// exercicio 1 - ver estrutura e atributos
db.superheroes.findOne();

//exercicio 2 - herois com menos de 180cm de altura
db.superheroes.find({ 'aspects.height': { $lt: 180 }});

//exercicio 3 - contar herois com menos de 180cm de altura
db.superheroes.countDocuments({ 'aspects.height': { $lt: 180 }});

// exercicio 4 - Retorne o total de super-heróis com até 1.80m.
db.superheroes.countDocuments({ 'aspects.height': { $lte: 180 }});

// exercicio 5 - Selecione um super-herói com 2.00m ou mais de altura.
db.superheroes.findOne({ 'aspects.height': { $gte: 200 }});

// exercicio 6 - Retorne o total de super-heróis com 2.00m ou mais.
db.superheroes.countDocuments({ 'aspects.height': { $gte: 200 }});

//exercicio 7 - Selecione todos os super-heróis que têm olhos verdes ("green").
db.superheroes.find({ 'aspects.eyeColor': 'green'});

// exercicio 8 - Retorne o total de super-heróis com olhos azuis ("blue").
db.superheroes.countDocuments({ 'aspects.eyeColor': 'blue'});

// exericicio 9 - Utilizando o operador $in, selecione todos os super-heróis com cabelos pretos ("black") ou carecas ("no hair")
db.superheroes.find({ 'aspects.hairColor': { $in: ['black', 'no hair']} });

// exercicio 10 - Retorne o total de super-heróis com cabelos pretos ("black") ou carecas ("no hair").
db.superheroes.countDocuments({ 'aspects.hairColor': { $in: ['black', 'no hair']} });

// exercicio 11 - Retorne o total de super-heróis que não tenham cabelos pretos ("black") ou não sejam carecas
db.superheroes.find({ 'aspects.hairColor': { $nin: ['black', 'no hair']} });

// exercicio 12 - Utilizando o operador $not, retorne o total de super-heróis que não tenham mais de 1.80m de altura.
db.superheroes.find({ 'aspects.height': { $not: { $gt: 180 }}});

// exercicio 13 - Selecione todos os super-heróis que não sejam humanos nem sejam maiores do que 1.80m.
db.superheroes.find({ $nor: [
  { race: 'Human'},
  { 'aspects.height': { $gt: 180 }},
]});

//exercicio 14 - Selecione todos os super-heróis com 1.80m ou 2.00m de altura e que sejam publicados pela Marvel Comics.
db.superheroes.find({ 'aspects.height': { $in: [180, 200] }, publisher: 'Marvel Comics'});

//exercicio 15 - Selecione todos os super-heróis que pesem entre 80kg e 100kg, sejam Humanos ou Mutantes e não sejam publicados pela DC Comics.
db.superheroes.find({
  $and: [
    {'aspects.weight': { $gte: 80, $lte: 100}},
    { $or: [{ race: 'Human'}, { race: 'Mutant'}]},
    { publisher: { $ne: 'DC Comics'}},
  ],
});

// exercicio 16 - Retorne o total de documentos que não contêm o campo race.
db.superheroes.countDocuments({ race: { $exists: false }});

// exercicio 17 - Retorne o total de documentos que contêm o campo hairColor.
db.superheroes.countDocuments({ 'aspects.hairColor': { $exists: true }});

// exercicio 18 - Remova apenas um documento publicado pela Sony Pictures.
db.superheroes.deleteOne({ publisher: 'Sony Pictures'});

// exercicio 19 - Remova todos os documentos publicados pelo George Lucas.
db.superheroes.deleteMany({ publisher: 'George Lucas'});
